<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<!-- 컴포넌트 스캔 -->
	<context:component-scan base-package="controller.action"></context:component-scan>
	
	<!-- 브라우저가 multipart/form-data 데이터로 보내는 파일을 처리하기 위한 MultipartResolver 클래스를 bean으로 등록 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	
	<!-- 어노테이션으로 무언가를 (ex 예외처리) 수행할 것을 명시 - 컨테이너가 @ControllerAdvice를 인식할 수 있도록 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- xml 설정으로 예외처리 수행 - *Resolver는 id를 반드시 맞춰서 작성할 것! -->
	<!-- <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.NullPointerException">excep/error.jsp</prop>
			</props>
		</property>
		<property name="defaultErrorView" value="excep/error.jsp" />
	</bean> -->
	<!-- defaultErrorView : 예상치 못한 예외처리 -->
	
</beans>
